const assert = require('assert');

import { intCode, findIntCodeForAnswer } from "./intCode";

describe('intCode test', () => {
  describe('intcode', () => {
    it('1,0,0,0,99', () => {
      assert.equal(intCode('1,0,0,0,99'), '2,0,0,0,99');
    });

    it('2,3,0,3,99', () => {
      assert.equal(intCode('2,3,0,3,99'), '2,3,0,6,99');
    });

    it('2,4,4,5,99,0', () => {
      assert.equal(intCode('2,4,4,5,99,0'), '2,4,4,5,99,9801');
    });

    it('1,1,1,4,99,5,6,0,99', () => {
      assert.equal(intCode('1,1,1,4,99,5,6,0,99'), '30,1,1,4,2,5,6,0,99');
    });

    it('Puzzle input', () => {
      assert.equal(intCode('1,12,2,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,19,1,19,6,23,2,23,13,27,1,27,5,31,2,31,10,35,1,9,35,39,1,39,9,43,2,9,43,47,1,5,47,51,2,13,51,55,1,55,9,59,2,6,59,63,1,63,5,67,1,10,67,71,1,71,10,75,2,75,13,79,2,79,13,83,1,5,83,87,1,87,6,91,2,91,13,95,1,5,95,99,1,99,2,103,1,103,6,0,99,2,14,0,0'), '3790645,12,2,2,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,48,1,19,6,50,2,23,13,250,1,27,5,251,2,31,10,1004,1,9,35,1007,1,39,9,1010,2,9,43,3030,1,5,47,3031,2,13,51,15155,1,55,9,15158,2,6,59,30316,1,63,5,30317,1,10,67,30321,1,71,10,30325,2,75,13,151625,2,79,13,758125,1,5,83,758126,1,87,6,758128,2,91,13,3790640,1,5,95,3790641,1,99,2,3790643,1,103,6,0,99,2,14,0,0');
    });

    it('Puzzle#2 input', () => {
      assert.equal(findIntCodeForAnswer('1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,19,1,19,6,23,2,23,13,27,1,27,5,31,2,31,10,35,1,9,35,39,1,39,9,43,2,9,43,47,1,5,47,51,2,13,51,55,1,55,9,59,2,6,59,63,1,63,5,67,1,10,67,71,1,71,10,75,2,75,13,79,2,79,13,83,1,5,83,87,1,87,6,91,2,91,13,95,1,5,95,99,1,99,2,103,1,103,6,0,99,2,14,0,0', 19690720), '6577');
    });
  });
});